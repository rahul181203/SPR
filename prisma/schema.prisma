// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // uses a shadow connection
}

model User {
  id           String    @id @default(cuid())
  firstname    String?
  lastname     String?
  email        String?   @unique
  mobilenumber String    @unique
  address      String?
  dateofbirth  DateTime?
  gender       String?
  orders       Orders[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Operators {
  id           String    @id @default(cuid())
  firstname    String?
  lastname     String?
  email        String?   @unique
  mobilenumber String    @unique
  address      String?
  dateofbirth  DateTime?
  gender       String?
  password     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Product {
  id            Int          @id @unique @default(autoincrement())
  name          String       @unique
  category      String
  total_units   Float
  cost_price    Float
  margin        Float
  selling_price Float
  units_sold    Int?
  CartItems     CartItems[]
  OrderItems    OrderItems[]
}

model Service {
  id         Int          @id @unique @default(autoincrement())
  name       String       @unique
  charge     Float
  OrderItems OrderItems[]
  CartItems  CartItems[]
}

model Orders {
  id           Int          @id @unique @default(autoincrement())
  customer     User         @relation(fields: [customer_id], references: [id])
  customer_id  String       @unique
  items        OrderItems[]
  tax          Float
  total_amount Float
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model CartItems {
  id           Int      @id @unique @default(autoincrement())
  product_id   Int?
  product      Product? @relation(fields: [product_id], references: [id])
  quantity     Int?
  service_id   Int?
  service      Service? @relation(fields: [service_id], references: [id])
  Cart         Cart?    @relation(fields: [cartId], references: [id])
  cartId       Int?
  total_amount Float?
}

model OrderItems {
  id           Int      @id @unique @default(autoincrement())
  product_id   Int?
  product      Product? @relation(fields: [product_id], references: [id])
  quantity     Int?
  service_id   Int?
  service      Service? @relation(fields: [service_id], references: [id])
  Order        Orders?  @relation(fields: [orderId], references: [id])
  orderId      Int?
  total_amount Float?
}

model Cart {
  id           Int         @id @unique @default(autoincrement())
  items        CartItems[]
  total_amount Float
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}
